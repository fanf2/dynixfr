



DNSEXT                                                        W. Mekking
Internet-Draft                                                NLnet Labs
Intended status: Experimental                              March 6, 2014
Expires: September 7, 2014


            Dynamic Update Incremental Zone Transfer in DNS
                    draft-mekking-dnsext-dynixfr-00

Abstract

   This document proposes extensions to the DNS protocol to provide an
   incremental zone transfer (IXFR) mechanism with dynamic update
   (UPDATE) capabilities.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 7, 2014.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Mekking                 Expires September 7, 2014               [Page 1]

Internet-Draft                   DYNIXFR                      March 2014


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Definitions . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Syntax  . . . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.1.  Add an RR . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.2.  Delete an RR  . . . . . . . . . . . . . . . . . . . . . .   3
     3.3.  Delete an RRset . . . . . . . . . . . . . . . . . . . . .   3
     3.4.  Delete All RRsets on a Name . . . . . . . . . . . . . . .   3
     3.5.  Delete All RRsets of a Type . . . . . . . . . . . . . . .   3
   4.  Protocol Description  . . . . . . . . . . . . . . . . . . . .   3
     4.1.  Client side . . . . . . . . . . . . . . . . . . . . . . .   3
     4.2.  Server side . . . . . . . . . . . . . . . . . . . . . . .   4
   5.  Data Minimization . . . . . . . . . . . . . . . . . . . . . .   5
     5.1.  Delete an RR or an RRset  . . . . . . . . . . . . . . . .   5
     5.2.  Replace option  . . . . . . . . . . . . . . . . . . . . .   5
     5.3.  More optimizations  . . . . . . . . . . . . . . . . . . .   5
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   6
   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   6
   9.  Changelog . . . . . . . . . . . . . . . . . . . . . . . . . .   6
     9.1.  00  . . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     10.1.  Informative References . . . . . . . . . . . . . . . . .   6
     10.2.  Normative References . . . . . . . . . . . . . . . . . .   7
   Appendix A.  Changelog  . . . . . . . . . . . . . . . . . . . . .   8

1.  Introduction

   Incremental zone transfer (IXFR, [RFC1995]) was introduced to
   efficiently transfer changed portions of a zone.  However, when a
   zone is signed with DNSSEC [RFC4033], [RFC4034], [RFC4035], the
   transfer may still become very large.  For example, when many
   resource record sets (RRsets) need a re-sign, or when the NSEC3
   [RFC5155] salt is changed, an IXFR may become larger than a full zone
   transfer (AXFR, [RFC5936]).

   To keep the deltas small in zone transfers, we need to have a richer
   update syntax, for example like in Dynamic Update (DNS UPDATE,
   [RFC2136].  This document introduces a new query type DXFR (dynamic
   zone transfer) that is able to express this richer syntax.

   An earlier proposal to keep the zone transfers small is IXFR-ONLY
   [IXFR-ONLY], by giving the client an oppurtunity to signal the server
   that it prefers an error above a fall back to an AXFR in case the
   server is not able to send an IXFR.





Mekking                 Expires September 7, 2014               [Page 2]

Internet-Draft                   DYNIXFR                      March 2014


2.  Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  Syntax

   The syntax for IXFR is a subset of DXFR, the richer syntax fo DXFR
   allows to add or delete multiple records with one resource record
   (RR).

3.1.  Add an RR

   This works the same as with IXFR.

3.2.  Delete an RR

   This works the same as with IXFR.

3.3.  Delete an RRset

   Similar to DNS UPDATE, one RR is added whose NAME and TYPE are those
   of the RRset to be deleted.  CLASS must be specified as ANY.
   RDLENGTH must be zero (0) and RDATA must therefore be empty.

3.4.  Delete All RRsets on a Name

   Similar to DNS UPDATE, one RR is added whose NAME is that of the name
   to be cleansed of RRsets.  TYPE must be specified as ANY.  CLASS must
   be specified as ANY.  RDLENGTH must be zero (0) and RDATA must
   therefore be empty.

3.5.  Delete All RRsets of a Type

   One RR is added whose NAME is that of the apex of the zone.  TYPE
   must be specified as the TYPE of the RRsets to be deleted.  CLASS
   must be specified as ANY.  RDLENGTH must be zero (0) and RDATA must
   therefore be empty.

4.  Protocol Description

4.1.  Client side

   The client can send a DXFR request.  Just like with IXFR, it can add
   a SOA RR in the authority section to signal the version of the zone
   it holds now.  If the client does not want the server to fall back to
   AXFR, it can add another SOA RR in the additional section.  This



Mekking                 Expires September 7, 2014               [Page 3]

Internet-Draft                   DYNIXFR                      March 2014


   achieves DXFR-only behavior, similar to IXFR-ONLY [IXFR-ONLY].  For
   example:

      ;; ->>HEADER<<- opcode: QUERY, rcode: NOERROR, id: 1337
      ;; flags: qr ; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1
      ;; QUESTION SECTION:
      ;; example.    IN    DXFR

      ;; AUTHORITY SECTION:
      example.       IN    SOA    serial=1

      ;; ADDITIONAL SECTION:
      example.       IN    SOA    serial=1

             Figure 1: A DXFR request for the "example." zone.

4.2.  Server side

   A server receiving a dynamic zone transfer (DXFR) request will reply
   with a DXFR.  A DXFR looks exactly like an IXFR, except there may be
   zero or more of the new introduced syntax RRs that can add or delete
   more records.  For "example.", the following zone transfer can be
   send that will replace all signatures in the zone with new signatures
   for the names "example.", "a.example.", "b.example." and
   "c.example.":

      ;; ->>HEADER<<- opcode: QUERY, rcode: NOERROR, id: 1337
      ;; flags: qr ; QUERY: 1, ANSWER: 9, AUTHORITY: 0, ADDITIONAL: 0
      ;; QUESTION SECTION:
      ;; example.    IN    DXFR

      ;; ANSWER SECTION:
      example.       IN    SOA    serial=3
      example.       IN    SOA    serial=1
      example.       ANY   RRSIG
      example.       IN    SOA    serial=3
      example.       IN    RRSIG  rdata
      a.example.     IN    RRSIG  rdata
      b.example.     IN    RRSIG  rdata
      c.example.     IN    RRSIG  rdata
      example.       IN    SOA    serial=3

            Figure 2: A DXFR response for the "example." zone.

   If the DXFR is larger than an AXFR, then the server MAY reply with an
   AXFR instead.





Mekking                 Expires September 7, 2014               [Page 4]

Internet-Draft                   DYNIXFR                      March 2014


5.  Data Minimization

   The proposal described in the previous section significantly reduces
   the size of a zone transfer compared with IXFR.  However, when a zone
   has changed its NSEC3 salt, the impact is less impressive.  This is
   because you need to remove all NSEC3 records and all its
   corresponding signatures.  The first part is achieved with:

                        example.       ANY   NSEC3

           Figure 3: Record to delete all RRsets of type NSEC3.

   But we can't do the same for part two, because there are other
   signatures than those covering type NSEC3.

   However, because RRSIG records are tightly related to its RRset we
   can introduce some additional data minimization rules.

5.1.  Delete an RR or an RRset

   When deleting an RR or a complete RRset, the IXFR client MUST also
   remove all existing RRSIG records on that RRset.  This is valid for
   all RRtypes except RRSIG itself.

5.2.  Replace option

   Instead of doing a delete RRset and add RRset, we could introdcuce
   new syntax that does a replace RRset.  This can save another RR in
   DXFR per deleted RRset.

   Todo: describe syntax for replace

5.3.  More optimizations

   We can optimize the transfer even more, because when adding an RRset
   we duplicate a lot of owner names, class and type fields.  For
   example. we could add an NS RRset of three records like this:

        ADD example. IN NS 3 ns1.example. ns2.example. ns3.example.

               Figure 4: Optimized addition of an NS RRset.

   With such a syntax, we can do more things like








Mekking                 Expires September 7, 2014               [Page 5]

Internet-Draft                   DYNIXFR                      March 2014


                REPLACE       <name> <type> <n> <rdata>{n}
                REPLACE-RRSIG <name> <type> <n> <rdata>{n}
                SOA           <serial>

                Figure 5: Optimized syntax ideas for DXFR.

6.  IANA Considerations

   IANA should assign the RR type value [TBD] (decimal) for DXFR.

7.  Security Considerations

   This document does not introduce additional security considerations.

8.  Acknowledgements

   Johan Ihren, Tony Finch.

9.  Changelog

9.1.  00

   o  Initial document.

10.  References

10.1.  Informative References

   [IXFR-ONLY]
              Sury, O. and S. Kerr, "IXFR-ONLY to Prevent IXFR Fallback
              to AXFR", February 2010, <https://tools.ietf.org/html/
              draft-kerr-ixfr-only-01>.

   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "DNS Security Introduction and Requirements", RFC
              4033, March 2005.

   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "Resource Records for the DNS Security Extensions",
              RFC 4034, March 2005.

   [RFC4035]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "Protocol Modifications for the DNS Security
              Extensions", RFC 4035, March 2005.

   [RFC5155]  Laurie, B., Sisson, G., Arends, R., and D. Blacka, "DNS
              Security (DNSSEC) Hashed Authenticated Denial of
              Existence", RFC 5155, March 2008.



Mekking                 Expires September 7, 2014               [Page 6]

Internet-Draft                   DYNIXFR                      March 2014


   [RFC5936]  Lewis, E. and A. Hoenes, "DNS Zone Transfer Protocol
              (AXFR)", RFC 5936, June 2010.

10.2.  Normative References

   [RFC1995]  Ohta, M., "Incremental Zone Transfer in DNS", RFC 1995,
              August 1996.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2136]  Vixie, P., Thomson, S., Rekhter, Y., and J. Bound,
              "Dynamic Updates in the Domain Name System (DNS UPDATE)",
              RFC 2136, April 1997.





































Mekking                 Expires September 7, 2014               [Page 7]

Internet-Draft                   DYNIXFR                      March 2014


Appendix A.  Changelog

   o  Initial version

Author's Address

   W. (Matthijs) Mekking
   NLnet Labs
   Science Park 400
   Amsterdam  1098 XH
   NL

   EMail: matthijs@nlnetlabs.nl
   URI:   http://www.nlnetlabs.nl/





































Mekking                 Expires September 7, 2014               [Page 8]
